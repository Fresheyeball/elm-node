var sanitize = function sanitize(record) {
    var spaces = Array.prototype.slice.call(arguments, 1);
    return spaces.reduce(function (r, space) {
        return (function () {
            r[space] ? void 0 : r[space] = {};
            return r[space];
        })();
    }, record);
};
var createReadStream = function createReadStream(fs, Task) {
    return function (options, path) {
        return Task.succeed(fs.createReadStream(path, options));
    };
};
var createWriteStream = function createWriteStream(fs, Task) {
    return function (options, path) {
        return Task.succeed(fs.createWriteStream(path, options));
    };
};
var make = function make(localRuntime) {
    return function () {
        var fsø1 = require('fs');
        var Taskø1 = Elm.Native.Task.make(localRuntime);
        return (function () {
            sanitize(localRuntime, 'Native', 'FS', 'Streams');
            return localRuntime.Native.FS.Streams.values ? localRuntime.Native.FS.Streams.values : localRuntime.Native.FS.Streams.values = {
                'createReadStream': F2(createReadStream(fsø1, Taskø1)),
                'createWriteStream': F2(createWriteStream(fsø1, Taskø1))
            };
        })();
    }.call(this);
};
sanitize(Elm, 'Native', 'FS', 'Streams');
Elm.Native.FS.Streams.make = make;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFub255bW91cy53aXNwIl0sIm5hbWVzIjpbInNhbml0aXplIiwicmVjb3JkIiwic3BhY2VzIiwicmVkdWNlIiwiciIsInNwYWNlIiwiY3JlYXRlUmVhZFN0cmVhbSIsImZzIiwiVGFzayIsIm9wdGlvbnMiLCJwYXRoIiwic3VjY2VlZCIsImNyZWF0ZVdyaXRlU3RyZWFtIiwibWFrZSIsImxvY2FsUnVudGltZSIsImZzw7gxIiwicmVxdWlyZSIsIlRhc2vDuDEiLCJFbG0iLCJOYXRpdmUuVGFzay5tYWtlIiwiTmF0aXZlLkZTLlN0cmVhbXMudmFsdWVzIiwiRjIiLCJOYXRpdmUuRlMuU3RyZWFtcy5tYWtlIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFPQSxRQUFBLEdBQVAsU0FBT0EsUUFBUCxDQUFpQkMsTUFBakIsRTtRQUEwQkMsTUFBQSxHO0lBQ3hCLE9BQUNBLE1BQUEsQ0FBT0MsTUFBUixDQUFlLFVBQUtDLENBQUwsRUFBT0MsS0FBUCxFQUFjO0FBQUEsZSxhQUMzQjtBQUFBLFlBQVVELENBQU4sQ0FBUUMsS0FBUixDQUFKLEcsTUFBQSxHQUFtQ0QsQ0FBTixDQUFRQyxLQUFSLENBQU4sR0FBcUIsRUFBNUM7QUFBQSxZQUNBLE9BQU1ELENBQU4sQ0FBUUMsS0FBUixFQURBO0FBQUEsUyxDQUFBLEVBRDJCO0FBQUEsS0FBN0IsRUFHQUosTUFIQSxFO0NBREY7QUFNQSxJQUFPSyxnQkFBQSxHQUFQLFNBQU9BLGdCQUFQLENBQ0dDLEVBREgsRUFDTUMsSUFETixFQUNZO0FBQUEscUJBQ1RDLE9BRFMsRUFDREMsSUFEQyxFQUVWO0FBQUEsZUFBQ0YsSUFBQSxDQUFLRyxPQUFOLENBQWlDSixFQUFsQixDQUFDRCxnQkFBRixDQUFzQkksSUFBdEIsRUFBMkJELE9BQTNCLENBQWQ7QUFBQSxLQUZVO0FBQUEsQ0FEWixDQU5BO0FBV0EsSUFBT0csaUJBQUEsR0FBUCxTQUFPQSxpQkFBUCxDQUNHTCxFQURILEVBQ01DLElBRE4sRUFDWTtBQUFBLHFCQUNUQyxPQURTLEVBQ0RDLElBREMsRUFFVjtBQUFBLGVBQUNGLElBQUEsQ0FBS0csT0FBTixDQUFrQ0osRUFBbkIsQ0FBQ0ssaUJBQUYsQ0FBdUJGLElBQXZCLEVBQTRCRCxPQUE1QixDQUFkO0FBQUEsS0FGVTtBQUFBLENBRFosQ0FYQTtBQWdCQSxJQUFPSSxJQUFBLEdBQVAsU0FBT0EsSUFBUCxDQUNHQyxZQURILEVBQ2lCO0FBQUEsVyxZQUNkO0FBQUEsWUFBQUMsSSxHQUFRQyxPQUFELENBQVMsSUFBVCxDQUFQO0FBQUEsUUFDQSxJQUFBQyxNLEdBQVFDLEdBQUEsQ0FBSUMsZ0JBQUwsQ0FBdUJMLFlBQXZCLENBQVAsQ0FEQTtBQUFBLFFBRUQsTyxhQUNFO0FBQUEsWUFBQ2QsUUFBRCxDQUFVYyxZQUFWLEUsUUFBQSxFLElBQUEsRSxTQUFBO0FBQUEsWUFDQSxPQUFJQSxZQUFBLENBQWFNLHdCQUFqQixHQUNJTixZQUFBLENBQWFNLHdCQURqQixHQUVVTixZQUFBLENBQWFNLHdCQUFuQixHQUE0QztBQUFBLGdCLG9CQUN0QkMsRUFBRCxDQUFLZixnQkFBRCxDQUFtQlMsSUFBbkIsRUFBc0JFLE1BQXRCLENBQUosQ0FEdUI7QUFBQSxnQixxQkFFdEJJLEVBQUQsQ0FBS1QsaUJBQUQsQ0FBbUJHLElBQW5CLEVBQXNCRSxNQUF0QixDQUFKLENBRnVCO0FBQUEsYUFGaEQsQ0FEQTtBQUFBLFMsQ0FBQSxFQURGLENBRkM7QUFBQSxLLEtBRGMsQyxJQUFBO0FBQUEsQ0FEakIsQ0FoQkE7QUE2QkNqQixRQUFELENBQVVrQixHQUFWLEUsUUFBQSxFLElBQUEsRSxTQUFBLEVBN0JBO0FBOEJNQSxHQUFBLENBQUlJLHNCQUFWLEdBQWlDVCxJQUFqQyIsInNvdXJjZXNDb250ZW50IjpbIihkZWZuLSBzYW5pdGl6ZSBbcmVjb3JkICYgc3BhY2VzXVxuICAoc3BhY2VzLnJlZHVjZSAoZm4gW3Igc3BhY2VdIChkb1xuICAgIChpZiAoYWdldCByIHNwYWNlKSBuaWwgKHNldCEgKGFnZXQgciBzcGFjZSkge30pKVxuICAgIChhZ2V0IHIgc3BhY2UpKSlcbiAgcmVjb3JkKSlcblxuKGRlZm4tIGNyZWF0ZVJlYWRTdHJlYW1cbiAgW2ZzIFRhc2tdIChmblxuICBbb3B0aW9ucyBwYXRoXVxuICAoVGFzay5zdWNjZWVkICguY3JlYXRlUmVhZFN0cmVhbSBmcyBwYXRoIG9wdGlvbnMpKSkpXG5cbihkZWZuLSBjcmVhdGVXcml0ZVN0cmVhbVxuICBbZnMgVGFza10gKGZuXG4gIFtvcHRpb25zIHBhdGhdXG4gIChUYXNrLnN1Y2NlZWQgKC5jcmVhdGVXcml0ZVN0cmVhbSBmcyBwYXRoIG9wdGlvbnMpKSkpXG5cbihkZWZuLSBtYWtlXG4gIFtsb2NhbFJ1bnRpbWVdIChsZXRcbiAgW2ZzICAgICAocmVxdWlyZSBcImZzXCIpXG4gICBUYXNrICAgKEVsbS5OYXRpdmUuVGFzay5tYWtlICBsb2NhbFJ1bnRpbWUpXVxuICAoZG9cbiAgICAoc2FuaXRpemUgbG9jYWxSdW50aW1lIDpOYXRpdmUgOkZTIDpTdHJlYW1zKVxuICAgIChpZiBsb2NhbFJ1bnRpbWUuTmF0aXZlLkZTLlN0cmVhbXMudmFsdWVzXG4gICAgICAgIGxvY2FsUnVudGltZS5OYXRpdmUuRlMuU3RyZWFtcy52YWx1ZXNcbiAgICAgICAgKHNldCEgbG9jYWxSdW50aW1lLk5hdGl2ZS5GUy5TdHJlYW1zLnZhbHVlcyB7XG4gICAgICAgICAgOmNyZWF0ZVJlYWRTdHJlYW0gIChGMiAoY3JlYXRlUmVhZFN0cmVhbSAgZnMgVGFzaykpXG4gICAgICAgICAgOmNyZWF0ZVdyaXRlU3RyZWFtIChGMiAoY3JlYXRlV3JpdGVTdHJlYW0gZnMgVGFzaykpXG4gICAgICAgIH0pKSkpKVxuXG4oc2FuaXRpemUgRWxtIDpOYXRpdmUgOkZTIDpTdHJlYW1zKVxuKHNldCEgRWxtLk5hdGl2ZS5GUy5TdHJlYW1zLm1ha2UgbWFrZSlcbiJdfQ==
