var sanitize = function sanitize(record) {
    var spaces = Array.prototype.slice.call(arguments, 1);
    return spaces.reduce(function (r, space) {
        return (function () {
            r[space] ? void 0 : r[space] = {};
            return r[space];
        })();
    }, record);
};
var createReadStream = function createReadStream(fs, Task) {
    return function (options, path) {
        return Task.succeed(fs.createReadStream(path, options));
    };
};
var createWriteStream = function createWriteStream(fs, Task) {
    return function (options, path) {
        return Task.succeed(fs.createWriteStream(path, options));
    };
};
var make = function make(localRuntime) {
    return function () {
        var fsø1 = require('fs');
        var Taskø1 = Elm.Native.Task.make(localRuntime);
        return (function () {
            sanitize(localRuntime, 'Native', 'Node', 'FS', 'Streams');
            return localRuntime.Native.Node.FS.Streams.values ? localRuntime.Native.Node.FS.Streams.values : localRuntime.Native.Node.FS.Streams.values = {
                'createReadStream': F2(createReadStream(fsø1, Taskø1)),
                'createWriteStream': createWriteStream(fsø1, Taskø1)
            };
        })();
    }.call(this);
};
sanitize(Elm, 'Native', 'Node', 'FS', 'Streams');
Elm.Native.Node.FS.Streams.make = make;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFub255bW91cy53aXNwIl0sIm5hbWVzIjpbInNhbml0aXplIiwicmVjb3JkIiwic3BhY2VzIiwicmVkdWNlIiwiciIsInNwYWNlIiwiY3JlYXRlUmVhZFN0cmVhbSIsImZzIiwiVGFzayIsIm9wdGlvbnMiLCJwYXRoIiwic3VjY2VlZCIsImNyZWF0ZVdyaXRlU3RyZWFtIiwibWFrZSIsImxvY2FsUnVudGltZSIsImZzw7gxIiwicmVxdWlyZSIsIlRhc2vDuDEiLCJFbG0iLCJOYXRpdmUuVGFzay5tYWtlIiwiTmF0aXZlLk5vZGUuRlMuU3RyZWFtcy52YWx1ZXMiLCJGMiIsIk5hdGl2ZS5Ob2RlLkZTLlN0cmVhbXMubWFrZSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBT0EsUUFBQSxHQUFQLFNBQU9BLFFBQVAsQ0FBaUJDLE1BQWpCLEU7UUFBMEJDLE1BQUEsRztJQUN4QixPQUFDQSxNQUFBLENBQU9DLE1BQVIsQ0FBZSxVQUFLQyxDQUFMLEVBQU9DLEtBQVAsRUFBYztBQUFBLGUsYUFDM0I7QUFBQSxZQUFVRCxDQUFOLENBQVFDLEtBQVIsQ0FBSixHLE1BQUEsR0FBbUNELENBQU4sQ0FBUUMsS0FBUixDQUFOLEdBQXFCLEVBQTVDO0FBQUEsWUFDQSxPQUFNRCxDQUFOLENBQVFDLEtBQVIsRUFEQTtBQUFBLFMsQ0FBQSxFQUQyQjtBQUFBLEtBQTdCLEVBR0FKLE1BSEEsRTtDQURGO0FBTUEsSUFBT0ssZ0JBQUEsR0FBUCxTQUFPQSxnQkFBUCxDQUNHQyxFQURILEVBQ01DLElBRE4sRUFDWTtBQUFBLHFCQUNUQyxPQURTLEVBQ0RDLElBREMsRUFFVjtBQUFBLGVBQUNGLElBQUEsQ0FBS0csT0FBTixDQUFpQ0osRUFBbEIsQ0FBQ0QsZ0JBQUYsQ0FBc0JJLElBQXRCLEVBQTJCRCxPQUEzQixDQUFkO0FBQUEsS0FGVTtBQUFBLENBRFosQ0FOQTtBQVdBLElBQU9HLGlCQUFBLEdBQVAsU0FBT0EsaUJBQVAsQ0FDR0wsRUFESCxFQUNNQyxJQUROLEVBQ1k7QUFBQSxxQkFDVEMsT0FEUyxFQUNEQyxJQURDLEVBRVY7QUFBQSxlQUFDRixJQUFBLENBQUtHLE9BQU4sQ0FBa0NKLEVBQW5CLENBQUNLLGlCQUFGLENBQXVCRixJQUF2QixFQUE0QkQsT0FBNUIsQ0FBZDtBQUFBLEtBRlU7QUFBQSxDQURaLENBWEE7QUFnQkEsSUFBT0ksSUFBQSxHQUFQLFNBQU9BLElBQVAsQ0FDR0MsWUFESCxFQUNpQjtBQUFBLFcsWUFDZDtBQUFBLFlBQUFDLEksR0FBUUMsT0FBRCxDQUFTLElBQVQsQ0FBUDtBQUFBLFFBQ0EsSUFBQUMsTSxHQUFRQyxHQUFBLENBQUlDLGdCQUFMLENBQXVCTCxZQUF2QixDQUFQLENBREE7QUFBQSxRQUVELE8sYUFDRTtBQUFBLFlBQUNkLFFBQUQsQ0FBVWMsWUFBVixFLFFBQUEsRSxNQUFBLEUsSUFBQSxFLFNBQUE7QUFBQSxZQUNBLE9BQUlBLFlBQUEsQ0FBYU0sNkJBQWpCLEdBQ0lOLFlBQUEsQ0FBYU0sNkJBRGpCLEdBRVVOLFlBQUEsQ0FBYU0sNkJBQW5CLEdBQWlEO0FBQUEsZ0Isb0JBQzNCQyxFQUFELENBQUtmLGdCQUFELENBQW1CUyxJQUFuQixFQUFzQkUsTUFBdEIsQ0FBSixDQUQ0QjtBQUFBLGdCLHFCQUUzQkwsaUJBQUQsQ0FBbUJHLElBQW5CLEVBQXNCRSxNQUF0QixDQUY0QjtBQUFBLGFBRnJELENBREE7QUFBQSxTLENBQUEsRUFERixDQUZDO0FBQUEsSyxLQURjLEMsSUFBQTtBQUFBLENBRGpCLENBaEJBO0FBNEJDakIsUUFBRCxDQUFVa0IsR0FBVixFLFFBQUEsRSxNQUFBLEUsSUFBQSxFLFNBQUEsRUE1QkE7QUE2Qk1BLEdBQUEsQ0FBSUksMkJBQVYsR0FBc0NULElBQXRDIiwic291cmNlc0NvbnRlbnQiOlsiKGRlZm4tIHNhbml0aXplIFtyZWNvcmQgJiBzcGFjZXNdXG4gIChzcGFjZXMucmVkdWNlIChmbiBbciBzcGFjZV0gKGRvXG4gICAgKGlmIChhZ2V0IHIgc3BhY2UpIG5pbCAoc2V0ISAoYWdldCByIHNwYWNlKSB7fSkpXG4gICAgKGFnZXQgciBzcGFjZSkpKVxuICByZWNvcmQpKVxuXG4oZGVmbi0gY3JlYXRlUmVhZFN0cmVhbVxuICBbZnMgVGFza10gKGZuXG4gIFtvcHRpb25zIHBhdGhdXG4gIChUYXNrLnN1Y2NlZWQgKC5jcmVhdGVSZWFkU3RyZWFtIGZzIHBhdGggb3B0aW9ucykpKSlcblxuKGRlZm4tIGNyZWF0ZVdyaXRlU3RyZWFtXG4gIFtmcyBUYXNrXSAoZm5cbiAgW29wdGlvbnMgcGF0aF1cbiAgKFRhc2suc3VjY2VlZCAoLmNyZWF0ZVdyaXRlU3RyZWFtIGZzIHBhdGggb3B0aW9ucykpKSlcblxuKGRlZm4tIG1ha2VcbiAgW2xvY2FsUnVudGltZV0gKGxldFxuICBbZnMgICAgIChyZXF1aXJlIFwiZnNcIilcbiAgIFRhc2sgICAoRWxtLk5hdGl2ZS5UYXNrLm1ha2UgIGxvY2FsUnVudGltZSldXG4gIChkb1xuICAgIChzYW5pdGl6ZSBsb2NhbFJ1bnRpbWUgOk5hdGl2ZSA6Tm9kZSA6RlMgOlN0cmVhbXMpXG4gICAgKGlmIGxvY2FsUnVudGltZS5OYXRpdmUuTm9kZS5GUy5TdHJlYW1zLnZhbHVlc1xuICAgICAgICBsb2NhbFJ1bnRpbWUuTmF0aXZlLk5vZGUuRlMuU3RyZWFtcy52YWx1ZXNcbiAgICAgICAgKHNldCEgbG9jYWxSdW50aW1lLk5hdGl2ZS5Ob2RlLkZTLlN0cmVhbXMudmFsdWVzIHtcbiAgICAgICAgICA6Y3JlYXRlUmVhZFN0cmVhbSAgKEYyIChjcmVhdGVSZWFkU3RyZWFtICBmcyBUYXNrKSlcbiAgICAgICAgICA6Y3JlYXRlV3JpdGVTdHJlYW0gKGNyZWF0ZVdyaXRlU3RyZWFtIGZzIFRhc2spIH0pKSkpKVxuXG4oc2FuaXRpemUgRWxtIDpOYXRpdmUgOk5vZGUgOkZTIDpTdHJlYW1zKVxuKHNldCEgRWxtLk5hdGl2ZS5Ob2RlLkZTLlN0cmVhbXMubWFrZSBtYWtlKVxuIl19
