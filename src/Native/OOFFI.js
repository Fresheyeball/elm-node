global.ooffi = {
    'sanitize': function (record) {
        var spaces = Array.prototype.slice.call(arguments, 1);
        return spaces.reduce(function (r, space) {
            return (function () {
                r[space] ? void 0 : r[space] = {};
                return r[space];
            })();
        }, record);
    },
    'taskCB': function (merr, Task, Tuple0, f) {
        return Task.asyncFunction(function (callback) {
            return f(function (err) {
                return callback(err ? Task.error(merr(err.toString())) : Task.succeed(Tuple0));
            });
        });
    }
};
var make = function make(localRuntime) {
    return function () {
        var Taskø1 = Elm.Native.Task.make(localRuntime);
        var Utilsø1 = Elm.Native.Utils.make(localRuntime);
        var Tuple0ø1 = (Utilsø1 || 0)['Tuple0'];
        return (function () {
            ooffi.sanitize(localRuntime, 'Native', 'OOFFI');
            return localRuntime.Native.OOFFI.values ? localRuntime.Native.OOFFI.values : localRuntime.Native.OOFFI.values = {
                'method0': F2(function (name, object) {
                    return Taskø1.asyncFunction(function (callback) {
                        return (function () {
                            object[name]();
                            return callback(Taskø1.succeed(Tuple0ø1));
                        })();
                    });
                }),
                'method1': F3(function (name, object, a) {
                    return Taskø1.asyncFunction(function (callback) {
                        return (function () {
                            object[name](a);
                            return callback(Taskø1.succeed(Tuple0ø1));
                        })();
                    });
                }),
                'method2': F4(function (name, object, a, b) {
                    return Taskø1.asyncFunction(function (callback) {
                        return (function () {
                            object[name](a, b);
                            return callback(Taskø1.succeed(Tuple0ø1));
                        })();
                    });
                }),
                'method3': F5(function (name, object, a, b, c) {
                    return Taskø1.asyncFunction(function (callback) {
                        return (function () {
                            object[name](a, b, c);
                            return callback(Taskø1.succeed(Tuple0ø1));
                        })();
                    });
                }),
                'method4': F6(function (name, object, a, b, c, d) {
                    return Taskø1.asyncFunction(function (callback) {
                        return (function () {
                            object[name](a, b, c, d);
                            return callback(Taskø1.succeed(Tuple0ø1));
                        })();
                    });
                }),
                'method5': F7(function (name, object, a, b, c, d, e) {
                    return Taskø1.asyncFunction(function (callback) {
                        return (function () {
                            object[name](a, b, c, d, e);
                            return callback(Taskø1.succeed(Tuple0ø1));
                        })();
                    });
                }),
                'method6': F8(function (name, object, a, b, c, d, e, f) {
                    return Taskø1.asyncFunction(function (callback) {
                        return (function () {
                            object[name](a, b, c, d, e, f);
                            return callback(Taskø1.succeed(Tuple0ø1));
                        })();
                    });
                }),
                'methodAsync0': F2(function (name, object) {
                    return Taskø1.asyncFunction(function (callback) {
                        return object[name](function () {
                            return callback(Taskø1.succeed(Tuple0ø1));
                        });
                    });
                }),
                'methodAsync1': F3(function (name, object, a) {
                    return Taskø1.asyncFunction(function (callback) {
                        return object[name](a, function () {
                            return callback(Taskø1.succeed(Tuple0ø1));
                        });
                    });
                }),
                'methodAsync2': F4(function (name, object, a, b) {
                    return Taskø1.asyncFunction(function (callback) {
                        return object[name](a, b, function () {
                            return callback(Taskø1.succeed(Tuple0ø1));
                        });
                    });
                }),
                'methodAsync3': F5(function (name, object, a, b, c) {
                    return Taskø1.asyncFunction(function (callback) {
                        return object[name](a, b, c, function () {
                            return callback(Taskø1.succeed(Tuple0ø1));
                        });
                    });
                }),
                'methodAsync4': F6(function (name, object, a, b, c, d) {
                    return Taskø1.asyncFunction(function (callback) {
                        return object[name](a, b, c, d, function () {
                            return callback(Taskø1.succeed(Tuple0ø1));
                        });
                    });
                }),
                'methodAsync5': F7(function (name, object, a, b, c, d, e) {
                    return Taskø1.asyncFunction(function (callback) {
                        return object[name](a, b, c, d, e, function () {
                            return callback(Taskø1.succeed(Tuple0ø1));
                        });
                    });
                }),
                'methodAsync6': F8(function (name, object, a, b, c, d, e, f) {
                    return Taskø1.asyncFunction(function (callback) {
                        return object[name](a, b, c, d, e, f, function () {
                            return callback(Taskø1.succeed(Tuple0ø1));
                        });
                    });
                }),
                'get0': F2(function (name, object) {
                    return Taskø1.asyncFunction(function (callback) {
                        return callback(Taskø1.succeed(object[name]()));
                    });
                }),
                'get1': F3(function (name, object, a) {
                    return Taskø1.asyncFunction(function (callback) {
                        return callback(Taskø1.succeed(object[name](a)));
                    });
                }),
                'get2': F4(function (name, object, a, b) {
                    return Taskø1.asyncFunction(function (callback) {
                        return callback(Taskø1.succeed(object[name](a, b)));
                    });
                }),
                'get3': F5(function (name, object, a, b, c) {
                    return Taskø1.asyncFunction(function (callback) {
                        return callback(Taskø1.succeed(object[name](a, b, c)));
                    });
                }),
                'get4': F6(function (name, object, a, b, c, d) {
                    return Taskø1.asyncFunction(function (callback) {
                        return callback(Taskø1.succeed(object[name](a, b, c, d)));
                    });
                }),
                'get5': F7(function (name, object, a, b, c, d, e) {
                    return Taskø1.asyncFunction(function (callback) {
                        return callback(Taskø1.succeed(object[name](a, b, c, d, e)));
                    });
                }),
                'get6': F8(function (name, object, a, b, c, d, e, f) {
                    return Taskø1.asyncFunction(function (callback) {
                        return callback(Taskø1.succeed(object[name](a, b, c, d, e, f)));
                    });
                }),
                'unsafeNull': null,
                'unsafeRequire': function (module) {
                    return require(module);
                }
            };
        })();
    }.call(this);
};
typeof(window) == 'undefined' ? window = global : void 0;
ooffi.sanitize(Elm, 'Native', 'OOFFI');
Elm.Native.OOFFI.make = make;
//# sourceMappingURL=data:application/json;base64,
