global.oo = {
    'sanitize': function (record) {
        var spaces = Array.prototype.slice.call(arguments, 1);
        return spaces.reduce(function (r, space) {
            return (function () {
                r[space] ? void 0 : r[space] = {};
                return r[space];
            })();
        }, record);
    },
    'method0': function (name, Task, Tuple0) {
        return function (x) {
            return Task.asyncFunction(function (callback) {
                return (function () {
                    x[name]();
                    return callback(Task.succeed(Tuple0));
                })();
            });
        };
    },
    'method1': function (name, Task, Tuple0) {
        return function (x, a) {
            return Task.asyncFunction(function (callback) {
                return (function () {
                    x[name](a);
                    return callback(Task.succeed(Tuple0));
                })();
            });
        };
    },
    'method2': function (name, Task, Tuple0) {
        return function (x, a, b) {
            return Task.asyncFunction(function (callback) {
                return (function () {
                    x[name](a, b);
                    return callback(Task.succeed(Tuple0));
                })();
            });
        };
    },
    'method3': function (name, Task, Tuple0) {
        return function (x, a, b, c) {
            return Task.asyncFunction(function (callback) {
                return (function () {
                    x[name](a, b, c);
                    return callback(Task.succeed(Tuple0));
                })();
            });
        };
    },
    'method4': function (name, Task, Tuple0) {
        return function (x, a, b, c, d) {
            return Task.asyncFunction(function (callback) {
                return (function () {
                    x[name](a, b, c, d);
                    return callback(Task.succeed(Tuple0));
                })();
            });
        };
    },
    'method5': function (name, Task, Tuple0) {
        return function (x, a, b, c, d, e) {
            return Task.asyncFunction(function (callback) {
                return (function () {
                    x[name](a, b, c, d, e);
                    return callback(Task.succeed(Tuple0));
                })();
            });
        };
    },
    'method6': function (name, Task, Tuple0) {
        return function (x, a, b, c, d, e, f) {
            return Task.asyncFunction(function (callback) {
                return (function () {
                    x[name](a, b, c, d, e, f);
                    return callback(Task.succeed(Tuple0));
                })();
            });
        };
    },
    'method0cb': function (name, Task, Tuple0) {
        return function (x) {
            return Task.asyncFunction(function (callback) {
                return x[name](function () {
                    return callback(Task.succeed(Tuple0));
                });
            });
        };
    },
    'method1cb': function (name, Task, Tuple0) {
        return function (x, a) {
            return Task.asyncFunction(function (callback) {
                return x[name](a, function () {
                    return callback(Task.succeed(Tuple0));
                });
            });
        };
    },
    'method2cb': function (name, Task, Tuple0) {
        return function (x, a, b) {
            return Task.asyncFunction(function (callback) {
                return x[name](a, b, function () {
                    return callback(Task.succeed(Tuple0));
                });
            });
        };
    },
    'method3cb': function (name, Task, Tuple0) {
        return function (x, a, b, c) {
            return Task.asyncFunction(function (callback) {
                return x[name](a, b, c, function () {
                    return callback(Task.succeed(Tuple0));
                });
            });
        };
    },
    'method4cb': function (name, Task, Tuple0) {
        return function (x, a, b, c, d) {
            return Task.asyncFunction(function (callback) {
                return x[name](a, b, c, d, function () {
                    return callback(Task.succeed(Tuple0));
                });
            });
        };
    },
    'method5cb': function (name, Task, Tuple0) {
        return function (x, a, b, c, d, e) {
            return Task.asyncFunction(function (callback) {
                return x[name](a, b, c, d, e, function () {
                    return callback(Task.succeed(Tuple0));
                });
            });
        };
    },
    'method6cb': function (name, Task, Tuple0) {
        return function (x, a, b, c, d, e, f) {
            return Task.asyncFunction(function (callback) {
                return x[name](a, b, c, d, e, f, function () {
                    return callback(Task.succeed(Tuple0));
                });
            });
        };
    },
    'get0': function (name, Task) {
        return function (x) {
            return Task.asyncFunction(function (callback) {
                return callback(Task.succeed(x[name]()));
            });
        };
    },
    'get1': function (name, Task) {
        return function (x, a) {
            return Task.asyncFunction(function (callback) {
                return callback(Task.succeed(x[name](a)));
            });
        };
    },
    'get2': function (name, Task) {
        return function (x, a, b) {
            return Task.asyncFunction(function (callback) {
                return callback(Task.succeed(x[name](a, b)));
            });
        };
    },
    'get3': function (name, Task) {
        return function (x, a, b, c) {
            return Task.asyncFunction(function (callback) {
                return callback(Task.succeed(x[name](a, b, c)));
            });
        };
    },
    'get4': function (name, Task) {
        return function (x, a, b, c, d) {
            return Task.asyncFunction(function (callback) {
                return callback(Task.succeed(x[name](a, b, c, d)));
            });
        };
    },
    'get5': function (name, Task) {
        return function (x, a, b, c, d, e) {
            return Task.asyncFunction(function (callback) {
                return callback(Task.succeed(x[name](a, b, c, d, e)));
            });
        };
    },
    'get6': function (name, Task) {
        return function (x, a, b, c, d, e, f) {
            return Task.asyncFunction(function (callback) {
                return callback(Task.succeed(x[name](a, b, c, d, e, f)));
            });
        };
    },
    'taskCB': function (merr, Task, Tuple0, f) {
        return Task.asyncFunction(function (callback) {
            return f(function (err) {
                return callback(err ? Task.error(merr(err.toString())) : Task.succeed(Tuple0));
            });
        });
    }
};
typeof(window) == 'undefined' ? window = global : void 0;
//# sourceMappingURL=data:application/json;base64,
