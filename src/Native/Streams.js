var make = function make(localRuntime) {
    return function () {
        var Taskø1 = Elm.Native.Task.make(localRuntime);
        var Signalø1 = Elm.Native.Signal.make(localRuntime);
        var Tuple0ø1 = (Elm.Native.Utils.make(localRuntime) || 0)['Tuple0'];
        return (function () {
            ooffi.sanitize(localRuntime, 'Native', 'Streams');
            return localRuntime.Native.Streams.values ? localRuntime.Native.Streams.values : localRuntime.Native.Streams.values = {
                'emptyBuffer': new Buffer([]),
                'marshallChunk': F3(function (Left, Right, chunk) {
                    return typeof(chunk) == 'string' ? Left(chunk) : Right(chunk);
                }),
                'withSignal': F2(function (signal, f) {
                    return Taskø1.asyncFunction(function (callback) {
                        return (function () {
                            Signalø1.output('withSignal', function (value) {
                                return Taskø1.perform(f(value));
                            }, signal);
                            return Taskø1.succeed(Tuple0ø1);
                        })();
                    });
                })
            };
        })();
    }.call(this);
};
ooffi.sanitize(Elm, 'Native', 'Streams');
Elm.Native.Streams.make = make;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFub255bW91cy53aXNwIl0sIm5hbWVzIjpbIm1ha2UiLCJsb2NhbFJ1bnRpbWUiLCJUYXNrw7gxIiwiRWxtIiwiTmF0aXZlLlRhc2subWFrZSIsIlNpZ25hbMO4MSIsIk5hdGl2ZS5TaWduYWwubWFrZSIsIlR1cGxlMMO4MSIsIk5hdGl2ZS5VdGlscy5tYWtlIiwib29mZmkiLCJzYW5pdGl6ZSIsIk5hdGl2ZS5TdHJlYW1zLnZhbHVlcyIsIkYzIiwiTGVmdCIsIlJpZ2h0IiwiY2h1bmsiLCJ0eXBlb2YiLCJGMiIsInNpZ25hbCIsImYiLCJhc3luY0Z1bmN0aW9uIiwiY2FsbGJhY2siLCJvdXRwdXQiLCJ2YWx1ZSIsInBlcmZvcm0iLCJzdWNjZWVkIiwiTmF0aXZlLlN0cmVhbXMubWFrZSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBT0EsSUFBQSxHQUFQLFNBQU9BLElBQVAsQ0FDR0MsWUFESCxFQUNpQjtBQUFBLFcsWUFDZDtBQUFBLFlBQUFDLE0sR0FBaUJDLEdBQUEsQ0FBSUMsZ0JBQUwsQ0FBd0JILFlBQXhCLENBQWhCO0FBQUEsUUFDQSxJQUFBSSxRLEdBQWlCRixHQUFBLENBQUlHLGtCQUFMLENBQXdCTCxZQUF4QixDQUFoQixDQURBO0FBQUEsUUFFQSxJQUFBTSxRLElBQWlCSixHQUFBLENBQUlLLGlCQUFMLENBQXdCUCxZQUF4QixDLE1BQVQsQyxRQUFBLENBQVAsQ0FGQTtBQUFBLFFBR0QsTyxhQUNFO0FBQUEsWUFBQ1EsS0FBQSxDQUFNQyxRQUFQLENBQWdCVCxZQUFoQixFLFFBQUEsRSxTQUFBO0FBQUEsWUFDQSxPQUFJQSxZQUFBLENBQWFVLHFCQUFqQixHQUNJVixZQUFBLENBQWFVLHFCQURqQixHQUVVVixZQUFBLENBQWFVLHFCQUFuQixHQUF5QztBQUFBLGdCLGVBRWxDLEksTUFBQSxDQUFTLEVBQVQsQ0FGa0M7QUFBQSxnQixpQkFJL0JDLEVBQUQsQ0FBSSxVQUFLQyxJQUFMLEVBQVVDLEtBQVYsRUFBZ0JDLEtBQWhCLEVBQ2pCO0FBQUEsMkJBQVNDLE1BQUQsQ0FBUUQsS0FBUixDQUFKLElBQW1CLFFBQXZCLEdBQ0tGLElBQUQsQ0FBTUUsS0FBTixDQURKLEdBRUtELEtBQUQsQ0FBT0MsS0FBUCxDQUZKO0FBQUEsaUJBRGEsQ0FKZ0M7QUFBQSxnQixjQVNsQ0UsRUFBRCxDQUFJLFVBQUtDLE1BQUwsRUFBWUMsQ0FBWixFQUNkO0FBQUEsMkJBQWdCakIsTUFBZixDQUFDa0IsYUFBRixDQUFxQixVQUFLQyxRQUFMLEVBQ25CO0FBQUEsK0IsYUFDRTtBQUFBLDRCQUFTaEIsUUFBUixDQUFDaUIsTUFBRixDQUFnQixZQUFoQixFQUE2QixVQUFLQyxLQUFMLEVBQzNCO0FBQUEsdUNBQVVyQixNQUFULENBQUNzQixPQUFGLENBQWdCTCxDQUFELENBQUdJLEtBQUgsQ0FBZjtBQUFBLDZCQURGLEVBQzZCTCxNQUQ3QjtBQUFBLDRCQUVBLE9BQVVoQixNQUFULENBQUN1QixPQUFGLENBQWVsQixRQUFmLEVBRkE7QUFBQSx5QixDQUFBLEVBREY7QUFBQSxxQkFERjtBQUFBLGlCQURVLENBVG1DO0FBQUEsYUFGN0MsQ0FEQTtBQUFBLFMsQ0FBQSxFQURGLENBSEM7QUFBQSxLLEtBRGMsQyxJQUFBO0FBQUEsQ0FEakI7QUEyQkNFLEtBQUEsQ0FBTUMsUUFBUCxDQUFnQlAsR0FBaEIsRSxRQUFBLEUsU0FBQSxFQTNCQTtBQTRCTUEsR0FBQSxDQUFJdUIsbUJBQVYsR0FBOEIxQixJQUE5QiIsInNvdXJjZXNDb250ZW50IjpbIihkZWZuLSBtYWtlXG4gIFtsb2NhbFJ1bnRpbWVdIChsZXRcbiAgW1Rhc2sgICAgICAgICAgICAoRWxtLk5hdGl2ZS5UYXNrLm1ha2UgICBsb2NhbFJ1bnRpbWUpXG4gICBTaWduYWwgICAgICAgICAgKEVsbS5OYXRpdmUuU2lnbmFsLm1ha2UgbG9jYWxSdW50aW1lKVxuICAgVHVwbGUwICg6VHVwbGUwIChFbG0uTmF0aXZlLlV0aWxzLm1ha2UgIGxvY2FsUnVudGltZSkpXVxuICAoZG9cbiAgICAob29mZmkuc2FuaXRpemUgbG9jYWxSdW50aW1lIDpOYXRpdmUgOlN0cmVhbXMpXG4gICAgKGlmIGxvY2FsUnVudGltZS5OYXRpdmUuU3RyZWFtcy52YWx1ZXNcbiAgICAgICAgbG9jYWxSdW50aW1lLk5hdGl2ZS5TdHJlYW1zLnZhbHVlc1xuICAgICAgICAoc2V0ISBsb2NhbFJ1bnRpbWUuTmF0aXZlLlN0cmVhbXMudmFsdWVzIHtcblxuICA6ZW1wdHlCdWZmZXIgKEJ1ZmZlci4gW10pXG5cbiAgOm1hcnNoYWxsQ2h1bmsgKEYzIChmbiBbTGVmdCBSaWdodCBjaHVua11cbiAgICAoaWYgKD09ICh0eXBlb2YgY2h1bmspIFwic3RyaW5nXCIpXG4gICAgICAgIChMZWZ0IGNodW5rKVxuICAgICAgICAoUmlnaHQgY2h1bmspKSkpXG5cbiAgOndpdGhTaWduYWwgKEYyIChmbiBbc2lnbmFsIGZdXG4gICAgKC5hc3luY0Z1bmN0aW9uIFRhc2sgKGZuIFtjYWxsYmFja11cbiAgICAgIChkb1xuICAgICAgICAoLm91dHB1dCBTaWduYWwgXCJ3aXRoU2lnbmFsXCIgKGZuIFt2YWx1ZV1cbiAgICAgICAgICAoLnBlcmZvcm0gVGFzayAoZiB2YWx1ZSkpKSBzaWduYWwpXG4gICAgICAgICguc3VjY2VlZCBUYXNrIFR1cGxlMCkpKSkpKVxuXG59KSkpKSlcblxuKG9vZmZpLnNhbml0aXplIEVsbSA6TmF0aXZlIDpTdHJlYW1zKVxuKHNldCEgRWxtLk5hdGl2ZS5TdHJlYW1zLm1ha2UgbWFrZSlcbiJdfQ==
